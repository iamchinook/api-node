#!/usr/bin/env node
// Dependencias de módulos

var app = require('../app');
var debug = require('debug')('api-gv2:server');
var http = require('http');
var https = require('https');
var fs = require('fs');

// Obtención del puerto del entorno

var port = 4004;
//var port = normalizePort(process.env.PORT || '4000');
//app.set('port', port);

// Creación del servidor HTTPS

const privateKey = fs.readFileSync('./certs/privkey.pem', 'utf8');
const certificate = fs.readFileSync('./certs/cert.pem', 'utf8');

const credentials = {
	key: privateKey,
  cert: certificate
};

var server = https.createServer(credentials, app);

server.listen(4000, () => {
	console.log('Servidor https en puerto 4000');
});

// Puerto a la escucha

server.on('error', onError);
server.on('listening', onListening);

// Detector de eventos para el evento error del servidor HTTPS

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // Manejar errores de escucha específicos con mensajes
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requiere privilegios elevados');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' está en uso');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
